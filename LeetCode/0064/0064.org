
针对这个问题考虑过使用贪心算法（greedy），但是贪心算法只能求得局部最优解，这个局部最优解并不一定是全局最优解。

BFS方法应该是解决该问题的一个方法，通过找出所有可能的路径，计算每条路径的最终取值，但是在提交Leetcode时被判定为LTE，说明该方法的时间复杂度不够好。
另外，BFS的时间复杂度是多少呢？
https://stackoverflow.com/questions/26549140/breadth-first-search-time-complexity-analysis
通过上述链接，BFS的时间复杂度分析，BFS是遍历graph的一种方法，时间复杂度为 =O(n)=O(|V|+|E|)= ，其中V代表vertex，E代表edge。

还想过使用DP方法，但是DP方法的时间复杂度并没有比BFS方法提高多少，但是可以尝试一下。
DP方法的时间复杂度为 =O(m*n)= 。

然而最终的结果让我非常惊讶，使用DP方法竟然AC了，而且速度超过了98%的提交。看来有时候还不能太相信自己的直觉。
